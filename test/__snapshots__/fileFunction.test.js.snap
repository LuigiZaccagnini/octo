// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Markdown to HTML renders correctly 1`] = `
"<!doctype html><html lang=\\"en-CA\\"><head><meta charset=\\"utf-8\\"><title>Filename</title><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\"></head><body><h1 id=\\"markdown-syntax\\">Markdown: Syntax</h1>
<ul>
<li><a href=\\"#overview\\">Overview</a><ul>
<li><a href=\\"#philosophy\\">Philosophy</a></li>
<li><a href=\\"#html\\">Inline HTML</a></li>
<li><a href=\\"#autoescape\\">Automatic Escaping for Special Characters</a></li></ul></li>
<li><a href=\\"#block\\">Block Elements</a><ul>
<li><a href=\\"#p\\">Paragraphs and Line Breaks</a></li>
<li><a href=\\"#header\\">Headers</a></li>
<li><a href=\\"#blockquote\\">Blockquotes</a></li>
<li><a href=\\"#list\\">Lists</a></li>
<li><a href=\\"#precode\\">Code Blocks</a></li>
<li><a href=\\"#hr\\">Horizontal Rules</a></li></ul></li>
<li><a href=\\"#span\\">Span Elements</a><ul>
<li><a href=\\"#link\\">Links</a></li>
<li><a href=\\"#em\\">Emphasis</a></li>
<li><a href=\\"#code\\">Code</a></li>
<li><a href=\\"#img\\">Images</a></li></ul></li>
<li><a href=\\"#misc\\">Miscellaneous</a><ul>
<li><a href=\\"#backslash\\">Backslash Escapes</a></li>
<li><a href=\\"#autolink\\">Automatic Links</a></li></ul></li>
</ul>
<p><strong>Note:</strong> This document is itself written using Markdown; you<br />
can <a href=\\"/projects/markdown/syntax.text\\">see the source for it by adding '.text' to the URL</a>.</p>
<hr />
<h2 id=\\"overview\\">Overview</h2>
<h3 id=\\"philosophy\\">Philosophy</h3>
<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>
<p>Readability, however, is emphasized above all else. A Markdown-formatted<br />
document should be publishable as-is, as plain text, without looking<br />
like it's been marked up with tags or formatting instructions. While<br />
Markdown's syntax has been influenced by several existing text-to-HTML<br />
filters -- including <a href=\\"http://docutils.sourceforge.net/mirror/setext.html\\">Setext</a>, <a href=\\"http://www.aaronsw.com/2002/atx/\\">atx</a>, <a href=\\"http://textism.com/tools/textile/\\">Textile</a>, <a href=\\"http://docutils.sourceforge.net/rst.html\\">reStructuredText</a>,<br />
<a href=\\"http://www.triptico.com/software/grutatxt.html\\">Grutatext</a>, and <a href=\\"http://ettext.taint.org/doc/\\">EtText</a> -- the single biggest source of<br />
inspiration for Markdown's syntax is the format of plain text email.</p>
<h2 id=\\"block-elements\\">Block Elements</h2>
<h3 id=\\"paragraphs-and-line-breaks\\">Paragraphs and Line Breaks</h3>
<p>A paragraph is simply one or more consecutive lines of text, separated<br />
by one or more blank lines. (A blank line is any line that looks like a<br />
blank line -- a line containing nothing but spaces or tabs is considered<br />
blank.) Normal paragraphs should not be indented with spaces or tabs.</p>
<p>The implication of the \\"one or more consecutive lines of text\\" rule is<br />
that Markdown supports \\"hard-wrapped\\" text paragraphs. This differs<br />
significantly from most other text-to-HTML formatters (including Movable<br />
Type's \\"Convert Line Breaks\\" option) which translate every line break<br />
character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>
<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you<br />
end a line with two or more spaces, then type return.</p>
<h3 id=\\"headers\\">Headers</h3>
<p>Markdown supports two styles of headers, [Setext] [1] and [atx] [2].</p>
<p>Optionally, you may \\"close\\" atx-style headers. This is purely<br />
cosmetic -- you can use this if you think it looks better. The<br />
closing hashes don't even need to match the number of hashes<br />
used to open the header. (The number of opening hashes<br />
determines the header level.)</p>
<h3 id=\\"blockquotes\\">Blockquotes</h3>
<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you're<br />
familiar with quoting passages of text in an email message, then you<br />
know how to create a blockquote in Markdown. It looks best if you hard<br />
wrap the text and put a <code>&gt;</code> before every line:</p>
<blockquote>
  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br />
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br />
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br />
  id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first<br />
line of a hard-wrapped paragraph:</p>
<blockquote>
  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br />
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br />
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<blockquote>
  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br />
  id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by<br />
adding additional levels of <code>&gt;</code>:</p>
<blockquote>
  <p>This is the first level of quoting.</p>
  <blockquote>
    <p>This is nested blockquote.</p>
  </blockquote>
  <p>Back to the first level.</p>
</blockquote>
<p>Blockquotes can contain other Markdown elements, including headers, lists,<br />
and code blocks:</p>
<blockquote>
  <h2 id=\\"this-is-a-header\\">This is a header.</h2>
  <ol>
  <li>This is the first list item.</li>
  <li>This is the second list item.</li>
  </ol>
  <p>Here's some example code:</p>
<pre><code>return shell_exec(\\"echo $input | $markdown_script\\");</code></pre>
</blockquote>
<p>Any decent text editor should make email-style quoting easy. For<br />
example, with BBEdit, you can make a selection and choose Increase<br />
Quote Level from the Text menu.</p>
<h3 id=\\"lists\\">Lists</h3>
<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>
<p>Unordered lists use asterisks, pluses, and hyphens -- interchangably<br />
-- as list markers:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>is equivalent to:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>and:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>Ordered lists use numbers followed by periods:</p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>It's important to note that the actual numbers you use to mark the<br />
list have no effect on the HTML output Markdown produces. The HTML<br />
Markdown produces from the above list is:</p>
<p>If you instead wrote the list in Markdown like this:</p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>or even:</p>
<ol start=\\"3\\">
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>you'd get the exact same HTML output. The point is, if you want to,<br />
you can use ordinal numbers in your ordered Markdown lists, so that<br />
the numbers in your source match the numbers in your published HTML.<br />
But if you want to be lazy, you don't have to.</p>
<p>To make lists look nice, you can wrap items with hanging indents:</p>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br />
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br />
viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br />
Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>
<p>But if you want to be lazy, you don't have to:</p>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br />
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br />
viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br />
Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>
<p>List items may consist of multiple paragraphs. Each subsequent<br />
paragraph in a list item must be indented by either 4 spaces<br />
or one tab:</p>
<ol>
<li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br />
sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br />
mi posuere lectus.</p>
<p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br />
vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br />
sit amet velit.</p></li>
<li><p>Suspendisse id sem consectetuer libero luctus adipiscing.</p></li>
</ol>
<p>It looks nice if you indent every line of the subsequent<br />
paragraphs, but here again, Markdown will allow you to be<br />
lazy:</p>
<ul>
<li><p>This is a list item with two paragraphs.</p>
<p>This is the second paragraph in the list item. You're<br />
only required to indent the first line. Lorem ipsum dolor<br />
sit amet, consectetuer adipiscing elit.</p></li>
<li><p>Another item in the same list.</p></li>
</ul>
<p>To put a blockquote within a list item, the blockquote's <code>&gt;</code><br />
delimiters need to be indented:</p>
<ul>
<li><p>A list item with a blockquote:</p>
<blockquote>
  <p>This is a blockquote<br />
  inside a list item.</p>
</blockquote></li>
</ul>
<p>To put a code block within a list item, the code block needs<br />
to be indented <em>twice</em> -- 8 spaces or two tabs:</p>
<ul>
<li><p>A list item with a code block:</p>
<pre><code>&lt;code goes here&gt;</code></pre></li>
</ul>
<h3 id=\\"code-blocks\\">Code Blocks</h3>
<p>Pre-formatted code blocks are used for writing about programming or<br />
markup source code. Rather than forming normal paragraphs, the lines<br />
of a code block are interpreted literally. Markdown wraps a code block<br />
in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>
<p>To produce a code block in Markdown, simply indent every line of the<br />
block by at least 4 spaces or 1 tab.</p>
<p>This is a normal paragraph:</p>
<pre><code>This is a code block.</code></pre>
<p>Here is an example of AppleScript:</p>
<pre><code>tell application \\"Foo\\"
    beep
end tell</code></pre>
<p>A code block continues until it reaches a line that is not indented<br />
(or the end of the article).</p>
<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>)<br />
are automatically converted into HTML entities. This makes it very<br />
easy to include example HTML source code using Markdown -- just paste<br />
it and indent it, and Markdown will handle the hassle of encoding the<br />
ampersands and angle brackets. For example, this:</p>
<pre><code>&lt;div class=\\"footer\\"&gt;
    &amp;copy; 2004 Foo Corporation
&lt;/div&gt;</code></pre>
<p>Regular Markdown syntax is not processed within code blocks. E.g.,<br />
asterisks are just literal asterisks within a code block. This means<br />
it's also easy to use Markdown to write about Markdown's own syntax.</p>
<pre><code>tell application \\"Foo\\"
    beep
end tell</code></pre>
<h2 id=\\"span-elements\\">Span Elements</h2>
<h3 id=\\"links\\">Links</h3>
<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>
<p>In both styles, the link text is delimited by [square brackets].</p>
<p>To create an inline link, use a set of regular parentheses immediately<br />
after the link text's closing square bracket. Inside the parentheses,<br />
put the URL where you want the link to point, along with an <em>optional</em><br />
title for the link, surrounded in quotes. For example:</p>
<p>This is <a href=\\"http://example.com/\\">an example</a> inline link.</p>
<p><a href=\\"http://example.net/\\">This link</a> has no title attribute.</p>
<h3 id=\\"emphasis\\">Emphasis</h3>
<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of<br />
emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an<br />
HTML <code>&lt;em&gt;</code> tag; double <code>*</code>'s or <code>_</code>'s will be wrapped with an HTML<br />
<code>&lt;strong&gt;</code> tag. E.g., this input:</p>
<p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h3 id=\\"code\\">Code</h3>
<p>To indicate a span of code, wrap it with backtick quotes (<code>\`</code>).<br />
Unlike a pre-formatted code block, a code span indicates code within a<br />
normal paragraph. For example:</p>
<p>Use the <code>printf()</code> function.</p></body></html>"
`;

exports[`Markdown to HTML renders correctly with language option 1`] = `
"<!doctype html><html lang=\\"It\\"><head><meta charset=\\"utf-8\\"><title>Filename</title><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\"></head><body><h1 id=\\"markdown-syntax\\">Markdown: Syntax</h1>
<ul>
<li><a href=\\"#overview\\">Overview</a><ul>
<li><a href=\\"#philosophy\\">Philosophy</a></li>
<li><a href=\\"#html\\">Inline HTML</a></li>
<li><a href=\\"#autoescape\\">Automatic Escaping for Special Characters</a></li></ul></li>
<li><a href=\\"#block\\">Block Elements</a><ul>
<li><a href=\\"#p\\">Paragraphs and Line Breaks</a></li>
<li><a href=\\"#header\\">Headers</a></li>
<li><a href=\\"#blockquote\\">Blockquotes</a></li>
<li><a href=\\"#list\\">Lists</a></li>
<li><a href=\\"#precode\\">Code Blocks</a></li>
<li><a href=\\"#hr\\">Horizontal Rules</a></li></ul></li>
<li><a href=\\"#span\\">Span Elements</a><ul>
<li><a href=\\"#link\\">Links</a></li>
<li><a href=\\"#em\\">Emphasis</a></li>
<li><a href=\\"#code\\">Code</a></li>
<li><a href=\\"#img\\">Images</a></li></ul></li>
<li><a href=\\"#misc\\">Miscellaneous</a><ul>
<li><a href=\\"#backslash\\">Backslash Escapes</a></li>
<li><a href=\\"#autolink\\">Automatic Links</a></li></ul></li>
</ul>
<p><strong>Note:</strong> This document is itself written using Markdown; you<br />
can <a href=\\"/projects/markdown/syntax.text\\">see the source for it by adding '.text' to the URL</a>.</p>
<hr />
<h2 id=\\"overview\\">Overview</h2>
<h3 id=\\"philosophy\\">Philosophy</h3>
<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>
<p>Readability, however, is emphasized above all else. A Markdown-formatted<br />
document should be publishable as-is, as plain text, without looking<br />
like it's been marked up with tags or formatting instructions. While<br />
Markdown's syntax has been influenced by several existing text-to-HTML<br />
filters -- including <a href=\\"http://docutils.sourceforge.net/mirror/setext.html\\">Setext</a>, <a href=\\"http://www.aaronsw.com/2002/atx/\\">atx</a>, <a href=\\"http://textism.com/tools/textile/\\">Textile</a>, <a href=\\"http://docutils.sourceforge.net/rst.html\\">reStructuredText</a>,<br />
<a href=\\"http://www.triptico.com/software/grutatxt.html\\">Grutatext</a>, and <a href=\\"http://ettext.taint.org/doc/\\">EtText</a> -- the single biggest source of<br />
inspiration for Markdown's syntax is the format of plain text email.</p>
<h2 id=\\"block-elements\\">Block Elements</h2>
<h3 id=\\"paragraphs-and-line-breaks\\">Paragraphs and Line Breaks</h3>
<p>A paragraph is simply one or more consecutive lines of text, separated<br />
by one or more blank lines. (A blank line is any line that looks like a<br />
blank line -- a line containing nothing but spaces or tabs is considered<br />
blank.) Normal paragraphs should not be indented with spaces or tabs.</p>
<p>The implication of the \\"one or more consecutive lines of text\\" rule is<br />
that Markdown supports \\"hard-wrapped\\" text paragraphs. This differs<br />
significantly from most other text-to-HTML formatters (including Movable<br />
Type's \\"Convert Line Breaks\\" option) which translate every line break<br />
character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>
<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you<br />
end a line with two or more spaces, then type return.</p>
<h3 id=\\"headers\\">Headers</h3>
<p>Markdown supports two styles of headers, [Setext] [1] and [atx] [2].</p>
<p>Optionally, you may \\"close\\" atx-style headers. This is purely<br />
cosmetic -- you can use this if you think it looks better. The<br />
closing hashes don't even need to match the number of hashes<br />
used to open the header. (The number of opening hashes<br />
determines the header level.)</p>
<h3 id=\\"blockquotes\\">Blockquotes</h3>
<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you're<br />
familiar with quoting passages of text in an email message, then you<br />
know how to create a blockquote in Markdown. It looks best if you hard<br />
wrap the text and put a <code>&gt;</code> before every line:</p>
<blockquote>
  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br />
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br />
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br />
  id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first<br />
line of a hard-wrapped paragraph:</p>
<blockquote>
  <p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,<br />
  consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.<br />
  Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</p>
</blockquote>
<blockquote>
  <p>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse<br />
  id sem consectetuer libero luctus adipiscing.</p>
</blockquote>
<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by<br />
adding additional levels of <code>&gt;</code>:</p>
<blockquote>
  <p>This is the first level of quoting.</p>
  <blockquote>
    <p>This is nested blockquote.</p>
  </blockquote>
  <p>Back to the first level.</p>
</blockquote>
<p>Blockquotes can contain other Markdown elements, including headers, lists,<br />
and code blocks:</p>
<blockquote>
  <h2 id=\\"this-is-a-header\\">This is a header.</h2>
  <ol>
  <li>This is the first list item.</li>
  <li>This is the second list item.</li>
  </ol>
  <p>Here's some example code:</p>
<pre><code>return shell_exec(\\"echo $input | $markdown_script\\");</code></pre>
</blockquote>
<p>Any decent text editor should make email-style quoting easy. For<br />
example, with BBEdit, you can make a selection and choose Increase<br />
Quote Level from the Text menu.</p>
<h3 id=\\"lists\\">Lists</h3>
<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>
<p>Unordered lists use asterisks, pluses, and hyphens -- interchangably<br />
-- as list markers:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>is equivalent to:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>and:</p>
<ul>
<li>Red</li>
<li>Green</li>
<li>Blue</li>
</ul>
<p>Ordered lists use numbers followed by periods:</p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>It's important to note that the actual numbers you use to mark the<br />
list have no effect on the HTML output Markdown produces. The HTML<br />
Markdown produces from the above list is:</p>
<p>If you instead wrote the list in Markdown like this:</p>
<ol>
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>or even:</p>
<ol start=\\"3\\">
<li>Bird</li>
<li>McHale</li>
<li>Parish</li>
</ol>
<p>you'd get the exact same HTML output. The point is, if you want to,<br />
you can use ordinal numbers in your ordered Markdown lists, so that<br />
the numbers in your source match the numbers in your published HTML.<br />
But if you want to be lazy, you don't have to.</p>
<p>To make lists look nice, you can wrap items with hanging indents:</p>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br />
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br />
viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br />
Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>
<p>But if you want to be lazy, you don't have to:</p>
<ul>
<li>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.<br />
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,<br />
viverra nec, fringilla in, laoreet vitae, risus.</li>
<li>Donec sit amet nisl. Aliquam semper ipsum sit amet velit.<br />
Suspendisse id sem consectetuer libero luctus adipiscing.</li>
</ul>
<p>List items may consist of multiple paragraphs. Each subsequent<br />
paragraph in a list item must be indented by either 4 spaces<br />
or one tab:</p>
<ol>
<li><p>This is a list item with two paragraphs. Lorem ipsum dolor<br />
sit amet, consectetuer adipiscing elit. Aliquam hendrerit<br />
mi posuere lectus.</p>
<p>Vestibulum enim wisi, viverra nec, fringilla in, laoreet<br />
vitae, risus. Donec sit amet nisl. Aliquam semper ipsum<br />
sit amet velit.</p></li>
<li><p>Suspendisse id sem consectetuer libero luctus adipiscing.</p></li>
</ol>
<p>It looks nice if you indent every line of the subsequent<br />
paragraphs, but here again, Markdown will allow you to be<br />
lazy:</p>
<ul>
<li><p>This is a list item with two paragraphs.</p>
<p>This is the second paragraph in the list item. You're<br />
only required to indent the first line. Lorem ipsum dolor<br />
sit amet, consectetuer adipiscing elit.</p></li>
<li><p>Another item in the same list.</p></li>
</ul>
<p>To put a blockquote within a list item, the blockquote's <code>&gt;</code><br />
delimiters need to be indented:</p>
<ul>
<li><p>A list item with a blockquote:</p>
<blockquote>
  <p>This is a blockquote<br />
  inside a list item.</p>
</blockquote></li>
</ul>
<p>To put a code block within a list item, the code block needs<br />
to be indented <em>twice</em> -- 8 spaces or two tabs:</p>
<ul>
<li><p>A list item with a code block:</p>
<pre><code>&lt;code goes here&gt;</code></pre></li>
</ul>
<h3 id=\\"code-blocks\\">Code Blocks</h3>
<p>Pre-formatted code blocks are used for writing about programming or<br />
markup source code. Rather than forming normal paragraphs, the lines<br />
of a code block are interpreted literally. Markdown wraps a code block<br />
in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>
<p>To produce a code block in Markdown, simply indent every line of the<br />
block by at least 4 spaces or 1 tab.</p>
<p>This is a normal paragraph:</p>
<pre><code>This is a code block.</code></pre>
<p>Here is an example of AppleScript:</p>
<pre><code>tell application \\"Foo\\"
    beep
end tell</code></pre>
<p>A code block continues until it reaches a line that is not indented<br />
(or the end of the article).</p>
<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>)<br />
are automatically converted into HTML entities. This makes it very<br />
easy to include example HTML source code using Markdown -- just paste<br />
it and indent it, and Markdown will handle the hassle of encoding the<br />
ampersands and angle brackets. For example, this:</p>
<pre><code>&lt;div class=\\"footer\\"&gt;
    &amp;copy; 2004 Foo Corporation
&lt;/div&gt;</code></pre>
<p>Regular Markdown syntax is not processed within code blocks. E.g.,<br />
asterisks are just literal asterisks within a code block. This means<br />
it's also easy to use Markdown to write about Markdown's own syntax.</p>
<pre><code>tell application \\"Foo\\"
    beep
end tell</code></pre>
<h2 id=\\"span-elements\\">Span Elements</h2>
<h3 id=\\"links\\">Links</h3>
<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>
<p>In both styles, the link text is delimited by [square brackets].</p>
<p>To create an inline link, use a set of regular parentheses immediately<br />
after the link text's closing square bracket. Inside the parentheses,<br />
put the URL where you want the link to point, along with an <em>optional</em><br />
title for the link, surrounded in quotes. For example:</p>
<p>This is <a href=\\"http://example.com/\\">an example</a> inline link.</p>
<p><a href=\\"http://example.net/\\">This link</a> has no title attribute.</p>
<h3 id=\\"emphasis\\">Emphasis</h3>
<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of<br />
emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an<br />
HTML <code>&lt;em&gt;</code> tag; double <code>*</code>'s or <code>_</code>'s will be wrapped with an HTML<br />
<code>&lt;strong&gt;</code> tag. E.g., this input:</p>
<p><em>single asterisks</em></p>
<p><em>single underscores</em></p>
<p><strong>double asterisks</strong></p>
<p><strong>double underscores</strong></p>
<h3 id=\\"code\\">Code</h3>
<p>To indicate a span of code, wrap it with backtick quotes (<code>\`</code>).<br />
Unlike a pre-formatted code block, a code span indicates code within a<br />
normal paragraph. For example:</p>
<p>Use the <code>printf()</code> function.</p></body></html>"
`;
